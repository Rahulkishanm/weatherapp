{"version":3,"sources":["common/Hooks/useAsync.js","common/Hooks/useFetch.js","environment.js","components/InputBar/index.js","components/Card/IconWeatherComponent.js","common/Utils/index.js","components/Card/CardContent.js","components/Card/index.js","components/WeatherHandler/index.js","App.js","index.js"],"names":["useAsync","callback","dependencies","useState","loading","setLoading","error","setError","value","setValue","callbackMemoized","useCallback","undefined","then","catch","finally","useEffect","DEFAULT_OPTIONS","headers","useFetch","url","options","Object","keys","length","fetch","res","ok","json","Promise","reject","apiKey","InputBar","setCityLatLong","ref","React","useRef","cityName","setCityName","showDropDown","setShowDropDown","current","focus","payloadForAlgoliaSearch","aroundLatLngViaIP","query","language","method","body","JSON","stringify","canDropDownBeShown","listOfCites","hits","filter","item","importance","map","administrative","label","lat","_geoloc","lon","lng","arr","index","self","findIndex","t","transformListOfcities","className","style","display","flexDirection","position","type","name","id","placeholder","onChange","e","target","idx","onClick","IconWeatherComponent","icon","height","width","svg","setSvg","src","window","location","origin","alt","stampFormatToDate","stamp","date","Date","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","stampFormatToTime","getHours","slice","getMinutes","stampFormatToDayInWeek","weekday","Header","temp","main","area","alignSelf","parseInt","borderLeft","InnerContent","time","FooterContentItem","content","weather","dt","Footer","reportList","reportListComponents","i","Card","valueTenDays","valueNow","temperature","list","isNight","sys","sunrise","getTime","sunset","WeatherHandler","cityLatLong","payloadForTenDays","payloadForCurrentTime","App","keyToRefreshEveryHour","setInterval","isFreshSession","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.cf4c2d06.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nexport default function useAsync(callback, dependencies = []) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  const [value, setValue] = useState();\n\n  const callbackMemoized = useCallback(() => {\n    setLoading(true);\n    setError(undefined);\n    setValue(undefined);\n    callback()\n      .then(setValue)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, dependencies);\n\n  useEffect(() => {\n    callbackMemoized();\n  }, [callbackMemoized]);\n\n  return { loading, error, value };\n}\n","import useAsync from \"./useAsync\";\n\nconst DEFAULT_OPTIONS = {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\n\nexport default function useFetch(url, options = {}, dependencies = []) {\n  return useAsync(() => {\n    if (Object.keys(options).length === 0) {\n      return fetch(url).then((res) => {\n        if (res.ok) return res.json();\n        return res.json().then((json) => Promise.reject(json));\n      });\n    }\n    return fetch(url, { ...DEFAULT_OPTIONS, ...options }).then((res) => {\n      if (res.ok) return res.json();\n      return res.json().then((json) => Promise.reject(json));\n    });\n  }, dependencies);\n}\n","// open weather key\nexport const apiKey = \"910223db7244fe5348d517710ba36961\";\n// algolia places keys\nexport const appId = \"plQ0HEAREVSZ\";\nexport const apiKeyAlgolia = \"adce344ab26b5c12d2362a2f6bc7e06e\";\n","import React from \"react\";\nimport useFetch from \"../../common/Hooks/useFetch\";\nimport { appId, apiKeyAlgolia } from \"../../environment\";\nexport const InputBar = ({ setCityLatLong }) => {\n  const ref = React.useRef();\n  const [cityName, setCityName] = React.useState(\"\");\n  const [showDropDown, setShowDropDown] = React.useState(false);\n\n  React.useEffect(() => {\n    ref.current.focus();\n  });\n  let payloadForAlgoliaSearch = {\n    aroundLatLngViaIP: false,\n    query: cityName,\n    language: \"en\",\n  };\n\n  const { loading, error, value } = useFetch(\n    `https://places-dsn.algolia.net/1/places/query?x-algolia-application-id=${appId}&x-algolia-api-key=${apiKeyAlgolia}`,\n    { method: \"POST\", body: JSON.stringify(payloadForAlgoliaSearch) },\n    [cityName]\n  );\n  const canDropDownBeShown = cityName.length > 1 && !loading;\n\n  let listOfCites = transformListOfcities(value);\n\n  return (\n    <div className=\"header\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          position: \"relative\",\n        }}\n      >\n        <input\n          ref={ref}\n          type=\"text\"\n          name=\"city\"\n          id=\"city\"\n          value={cityName}\n          placeholder=\"Type a city here !!\"\n          onChange={(e) => {\n            setCityName(e.target.value);\n            setShowDropDown(true);\n          }}\n        />\n\n        <div className=\"city-dropdown-container\">\n          {canDropDownBeShown &&\n            showDropDown &&\n            [...listOfCites].map((item, idx) => (\n              <div\n                key={item.label}\n                className=\"city-dropdown\"\n                onClick={() => {\n                  setShowDropDown(false);\n                  setCityName(item.label);\n                  setCityLatLong({\n                    lat: item.lat,\n                    lon: item.lon,\n                  });\n                }}\n              >\n                {item.label}\n              </div>\n            ))}\n        </div>\n        {error &&\n          \"There was a error from algolia server, please retry after sometime\"}\n      </div>\n    </div>\n  );\n};\nfunction transformListOfcities(value) {\n  if (value?.hits.length > 0) {\n    let listOfCites = value?.hits\n      .filter((item) => item.importance > 10)\n      .map((item) => {\n        if (item?.administrative?.length > 0) {\n          return {\n            label: item.administrative[item.administrative.length - 1],\n            lat: item._geoloc.lat,\n            lon: item._geoloc.lng,\n          };\n        }\n        return null;\n      })\n      .filter((item) => item !== null);\n    listOfCites = listOfCites.filter(\n      (arr, index, self) =>\n        index === self.findIndex((t) => t.label === arr.label)\n    );\n    return listOfCites;\n  }\n  return [];\n}\n","import React, { useEffect, useState } from \"react\";\n\nfunction IconWeatherComponent({ icon, height, width }) {\n  let [svg, setSvg] = useState(\"\");\n\n  useEffect(() => {\n    const setIcon = () => {\n      if (icon === \"01d\") {\n        setSvg(\"day.svg\");\n      }\n      if (icon === \"01n\") {\n        setSvg(\"night.svg\");\n      }\n      if (icon === \"02d\") {\n        setSvg(\"cloudy-day-1.svg\");\n      }\n      if (icon === \"02n\") {\n        setSvg(\"cloudy-night-1.svg\");\n      }\n      if (\n        icon === \"03d\" ||\n        icon === \"03n\" ||\n        icon === \"04d\" ||\n        icon === \"04n\"\n      ) {\n        setSvg(\"cloudy.svg\");\n      }\n      if (icon === \"09d\" || icon === \"09n\") {\n        setSvg(\"rainy-6.svg\");\n      }\n      if (icon === \"10d\" || icon === \"10n\") {\n        setSvg(\"rainy-3.svg\");\n      }\n      if (icon === \"11d\" || icon === \"11n\") {\n        setSvg(\"thunder.svg\");\n      }\n      if (icon === \"13d\" || icon === \"13n\") {\n        setSvg(\"snowy-5.svg\");\n      }\n      if (icon === \"50d\" || icon === \"50n\") {\n        setSvg(\"cloudy.svg\");\n      }\n    };\n    setIcon();\n  }, [icon]);\n\n  return (\n    <div>\n      <img\n        src={`${window.location.origin}/weather-icons/${svg}`}\n        width={width}\n        height={height}\n        alt=\"climate image\"\n      />\n    </div>\n  );\n}\n\nexport default IconWeatherComponent;\n","const stampFormatToDate = (stamp) => {\n  let newStamp = stamp * 1000;\n  let date = new Date(newStamp);\n  let ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(date);\n  let mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(date);\n  let da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(date);\n  return `${da} ${mo} ${ye}`;\n};\nconst stampFormatToTime = (stamp) => {\n  let newStamp = stamp * 1000;\n  let date = new Date(newStamp);\n  let formattedTime =\n    (\"0\" + date.getHours()).slice(-2) +\n    \":\" +\n    (\"0\" + date.getMinutes()).slice(-2);\n  return formattedTime;\n};\nconst stampFormatToDayInWeek = (stamp) => {\n  const newStamp = stamp * 1000;\n  const date = new Date(newStamp);\n  const dayInWeek = new Intl.DateTimeFormat(\"en\", { weekday: \"short\" }).format(\n    date\n  );\n  return dayInWeek;\n};\n\nexport { stampFormatToDate, stampFormatToTime, stampFormatToDayInWeek };\n","import IconWeatherComponent from \"./IconWeatherComponent\";\nimport { stampFormatToTime } from \"../../common/Utils\";\nimport \"./card.css\";\nexport const Header = ({ temp = 0, main = \"empty\", area = \"empty\" }) => {\n  return (\n    <div className=\"cardheader\">\n      <div style={{ alignSelf: \"center\" }}>{`${parseInt(temp)}°C`}</div>\n      <div style={{ borderLeft: \"1px solid white\" }} />\n      <div>\n        <div>{main}</div>\n        <div>{area}</div>\n      </div>\n    </div>\n  );\n};\nexport const InnerContent = ({\n  icon = \"01d\",\n  day = \"Mon\",\n  date = \"21 Jan 2021\",\n  time = \"08:43\",\n}) => {\n  return (\n    <div className=\"innerContent\">\n      <IconWeatherComponent icon={icon} height={\"100px\"} width=\"100px\" />\n      <div>{day}</div>\n      <div>{date}</div>\n      <div>{time}</div>\n    </div>\n  );\n};\n\nexport const FooterContentItem = ({ content, idx }) => {\n  const { icon } = content.weather[0];\n  const time = stampFormatToTime(content.dt);\n  const temp = content.main.temp;\n  return (\n    <div\n      key={content.name}\n      style={{ display: \"flex\", flexDirection: \"column\" }}\n    >\n      <div>{idx === 0 ? \"Now\" : time}</div>\n      <IconWeatherComponent icon={icon} height=\"35px\" width=\"35px\" />\n      <div>{`${parseInt(temp)}°C`}</div>\n    </div>\n  );\n};\nexport const Footer = ({ reportList = [] }) => {\n  const reportListComponents = reportList.map((i, idx) => (\n    <FooterContentItem content={i} idx={idx} key={i.dt} />\n  ));\n  return <div className=\"footer\">{reportListComponents}</div>;\n};\n","import { Header, Footer, InnerContent } from \"./CardContent\";\nimport {\n  stampFormatToDate,\n  stampFormatToDayInWeek,\n  stampFormatToTime,\n} from \"../../common/Utils\";\nexport const Card = ({ valueTenDays, valueNow }) => {\n  const name = valueNow.name;\n  const { main, icon } = valueNow.weather[0];\n  const temperature = valueNow.main.temp;\n  const dt = valueNow.dt;\n  const reportList = valueTenDays.list;\n  const isNight =\n    new Date(valueNow.sys.sunrise * 1000) > new Date().getTime() &&\n    new Date().getTime() < new Date(valueNow.sys.sunset * 1000);\n\n  return (\n    <div className={`card ${isNight ? \"backgroundNight\" : \"backgroundLight\"} `}>\n      <Header temp={temperature} main={main} area={name} />\n      <InnerContent\n        date={stampFormatToDate(dt)}\n        day={stampFormatToDayInWeek(dt)}\n        time={stampFormatToTime(dt)}\n        icon={icon}\n      />\n      <Footer reportList={[valueNow, ...reportList]} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card } from \"../Card\";\nimport useFetch from \"../../common/Hooks/useFetch\";\nimport { apiKey } from \"../../environment\";\nexport const WeatherHandler = ({ cityLatLong }) => {\n  const { lat, lon } = cityLatLong;\n\n  const payloadForTenDays = useFetch(\n    `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`,\n    {},\n    [lat, lon]\n  );\n  const payloadForCurrentTime = useFetch(\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`,\n    {},\n    [lat, lon]\n  );\n\n  return (\n    <div className=\"weather-container\">\n      {!!payloadForCurrentTime.value &&\n        !!payloadForTenDays.value &&\n        !payloadForTenDays.error &&\n        !payloadForTenDays.error && (\n          <div className=\"item\">\n            <Card\n              valueTenDays={payloadForTenDays.value}\n              valueNow={payloadForCurrentTime.value}\n            />\n          </div>\n        )}\n      {payloadForTenDays.error ||\n        (payloadForCurrentTime.error &&\n          \"There was error from openweathermap API, please retry later\")}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nimport { InputBar } from \"./components/InputBar\";\nimport { WeatherHandler } from \"./components/WeatherHandler\";\n\nexport default function App() {\n  let keyToRefreshEveryHour = 0;\n  const [cityLatLong, setCityLatLong] = React.useState({\n    lat: null,\n    lon: null,\n  });\n  setInterval(() => {\n    keyToRefreshEveryHour = keyToRefreshEveryHour + 1;\n  }, 60 * 1000);\n  const isFreshSession = cityLatLong.lat === null;\n  return (\n    <div className=\"App\">\n      <InputBar setCityLatLong={setCityLatLong} />\n      {!isFreshSession && (\n        <WeatherHandler cityLatLong={cityLatLong} key={keyToRefreshEveryHour} />\n      )}\n      {isFreshSession && (\n        <div className=\"introTitle\">Welcome to World Wide Weather ⛱️</div>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}